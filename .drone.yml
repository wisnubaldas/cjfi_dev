kind: pipeline
type: docker
name: default

# workspace:
#   path: /var/www/html/

trigger:
  branch:
  - education
  
steps:
- name: build
  image: bitnami/laravel:latest
  pull: if-not-exists
  commands:
  - php --version
  - composer --version
  - composer install
  - php artisan --version
  - cp .env.example .env
  - php artisan key:generate
  - sleep 10
  - php artisan cek-koneksi
  - php artisan migrate:fresh --seed
  - php artisan storage:link
  - php artisan clear-compile
  - php artisan optimize:clear
  - php artisan route:cache
  # - ./vendor/bin/phpunit

- name: stop container
  image: appleboy/drone-ssh
  # workspace:
  #   path: /home/cjfi/docker_app/flight
  settings:
    host:
      from_secret: server_host
    username:
      from_secret: server_user
    password:
      from_secret: server_password
    port:
      from_secret: server_port
    script:
      - cd /home/cjfi/docker_app/flight
      - docker-compose down

- name: copy project
  image: appleboy/drone-scp
  settings:
    host:
      from_secret: server_host
    username:
      from_secret: server_user
    password:
      from_secret: server_password
    port:
      from_secret: server_port
    target: /home/cjfi/docker_app/flight
    source: /drone/src

- name: run container
  image: appleboy/drone-ssh
  # workspace:
  #   path: /home/cjfi/docker_app/flight
  settings:
    host:
      from_secret: server_host
    username:
      from_secret: server_user
    password:
      from_secret: server_password
    port:
      from_secret: server_port
    script:
      - cd /home/cjfi/docker_app/flight
      - docker-compose up -d
      - sleep 10
      - docker exec flight_app php artisan migrate:fresh --seed
      - docker exec flight_app php artisan route:list
      - docker exec flight_app php artisan test

# - name: publish  
#   image: plugins/docker
#   pull: if-not-exists
#   settings:
#     username:
#       from_secret: docker_user
#     password:
#       from_secret: docker_password
#     repo: wisnubaldas/flight
#     auto_tag: true
#     auto_tag_suffix: latest

# - name: deploy
#   image: appleboy/drone-ssh
#   settings:
#     host:
#       from_secret: server_host
#     username:
#       from_secret: server_user
#     password:
#       from_secret: server_password
#     port:
#       from_secret: server_port
#     script:
#       - cd docker_app/flight/
#       - ls -l
#       - docker-compose down
#       - docker-compose pull
#       - docker-compose up -d
      # - docker exec -it flight_app chmod -R 777 /var/www/storage
      # - docker exec -it flight_app php artisan storage:link
      # - docker exec -it flight_app chmod -R 777 /var/www/public

   
- name: send telegram notification
  image: appleboy/drone-telegram
  when:
      status: [success, failure]
  settings:
    token:
      from_secret: telegram_token
    to:
      from_secret: telegram_id
    message: >
      {{#success build.status}}
      
      ✅ Build #{{build.number}} of `{{repo.name}}` succeeded.

      📝 Commit by {{commit.author}} on `{{commit.branch}}`:

      ```
      🕛 Start : {{datetime build.started "02-Jan-2006 15:04:05" "Asia/Jakarta"}} 
      🕒 End: {{datetime build.finished "02-Jan-2006 15:04:05" "Asia/Jakarta"}}

      {{commit.message}}
      ```

      🌐 {{ build.link }}

      {{else}}
      ❌ Build #{{build.number}} of `{{repo.name}}` failed.

      📝 Commit by {{commit.author}} on `{{commit.branch}}`:

      ```
      
      🕛 Start : {{datetime build.started "02-Jan-2006 15:04:05" "Asia/Jakarta"}} 
      🕒 End: {{datetime build.finished "02-Jan-2006 15:04:05" "Asia/Jakarta"}}

      {{commit.message}}

      ```

      🌐 {{ build.link }}
      {{/success}}

services:
- name: database
  pull: if-not-exists
  image: mariadb
  environment:
    MYSQL_HOST: database
    MYSQL_DATABASE: test
    MYSQL_ALLOW_EMPTY_PASSWORD: yes
    MYSQL_USER: homestead
    MYSQL_PASSWORD: homestead

